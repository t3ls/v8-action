#===================================================
# Description: Build v8 enginer using GitHub Actions
# Author: t1an5t
# Edited: t3ls
#===================================================


name: BUILD v8

on:
  push:
    branches: [ master ]
  # watch:
  #   types: started

env:
  CHECKOUT_FLAG: true
  PATCH_FLAG: true
  BUILD_RELEASE: true
  BUILD_DEBUG: false
  # transfer工具使用的分支，不能用可以改成master
  TRANSFER_BRANCH: v0.4.8-beta
  # transfer使用的api，详见https://github.com/Mikubill/transfer/
  #arp  -  Airportal  -  https://aitportal.cn/
  #bit  -  bitSend  -  https://bitsend.jp/
  #cat  -  CatBox  -  https://catbox.moe/
  #cow  -  CowTransfer  -  https://www.cowtransfer.com/
  #gof  -  GoFile  -  https://gofile.io/
  #tmp  -  TmpLink  -  https://tmp.link/
  #vim  -  Vim-cn  -  https://img.vim-cn.com/
  #wss  -  WenShuShu  -  https://www.wenshushu.cn/
  #wet  -  WeTransfer  -  https://wetransfer.com/
  #flk  -  FileLink  -  https://filelink.io/
  #trs  -  Transfer.sh  -  https://transfer.sh/
  #lzs  -  Lanzous  -  https://www.lanzous.com/
  TRANSFER_TOOL: cow
  COMMIT: 6dc88c191f5ecc5389dc26efa3ca0907faef3598
  DEPOT_UPLOAD: true
  SRC_UPLOAD: true


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id 	
    
    steps:
    - name: Checkout
      uses: actions/checkout@master
      
    # init ubuntu1804 environment
    - name: init env
      run: |
        sudo apt-get update
        sudo apt-get -y install pigz pkg-config git subversion curl wget build-essential python xz-utils zip p7zip-full
    
    # get depot_tools
    - name: depot_tools
      run: |
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        echo export PATH=\"\$PATH:`pwd`/depot_tools/\" >> ~/.bash_profile
    
    # fetch v8 source code
    - name: fetch v8
      run: |
        source ~/.bash_profile
        fetch v8
        cd v8
        ./build/install-build-deps.sh --no-chromeos-fonts
    
    # checkout source code
    - name: checkout v8
      if: env.CHECKOUT_FLAG == 'true' && !cancelled()
      run: |
        cd v8
        git reset --hard $COMMIT
        cd ..
          
    - name: sync v8 deps
      run: |
        source ~/.bash_profile
        cd v8
        gclient sync
           
    # apply diff file
    - name: patch v8
      if: env.PATCH_FLAG == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/Jkl6U > patch.diff
        cd v8
        git apply ../patch.diff
        cd ..
   
    - name: build v8 release
      if: env.BUILD_RELEASE == 'true' && !cancelled()
      run: |
        source ~/.bash_profile
        cd v8
        tools/dev/gm.py x64.release
        cd ..
        
    - name: build v8 debug
      if: env.BUILD_DEBUG == 'true' && !cancelled()
      run: |
        source ~/.bash_profile
        cd v8
        tools/dev/gm.py x64.debug
        cd ..
        
    # compress this file
    - name: compress depot_tools
      if: env.DEPOT_UPLOAD == 'true' && !cancelled()
      run: |
        tar -Ipigz -cf depot_tools.tar.gz depot_tools
        
    # 7zip v8 src
    - name: compress v8
      run: |
        tar -Ipigz -cf v8.tar.gz v8
        7z a v8.7z ./v8.tar.gz -v2048m -mmt2
    
    # upload depot_tools.zip to cowtransfer
    - name: upload depot_tools
      if: env.DEPOT_UPLOAD == 'true' && !cancelled()
      run: |
        curl -L "https://github.com/Mikubill/transfer/releases/download/$TRANSFER_BRANCH/transfer_${TRANSFER_BRANCH:1}2_linux_amd64.tar.gz" | tar xz
        printf "\nTransfer Downloded.\n\n"
        ./transfer $TRANSFER_TOOL --block 2621440 -s -p 64 --no-progress depot_tools.tar.gz 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"
   
    # upload v8.zip to cowtransfer
    - name: upload v8
      if: env.SRC_UPLOAD == 'true' && !cancelled()
      run: |
        curl -L "https://github.com/Mikubill/transfer/releases/download/$TRANSFER_BRANCH/transfer_${TRANSFER_BRANCH:1}2_linux_amd64.tar.gz" | tar xz
        printf "\nTransfer Downloded.\n\n"
        echo "for file in ./*;do" > compress.sh
        echo "if test -f \$file;then" >> compress.sh
        echo "tmp=\${file##*/}" >> compress.sh
        echo "if [[ \"\$tmp\" == v8.7z.* ]];then" >> compress.sh
        echo "echo \"Start upload \$file\"" >> compress.sh
        echo "./transfer $TRANSFER_TOOL --block 2621440 -s -p 64 --no-progress \$file 2>&1 | tee cowtransfer.log" >> compress.sh
        echo "echo \"::warning file=cowtransfer.com::\$(cat cowtransfer.log | grep https)\"" >> compress.sh
        echo "echo \$file" >> compress.sh
        echo "fi" >> compress.sh
        echo "fi" >> compress.sh
        echo "done" >> compress.sh
        chmod +x ./compress.sh && ./compress.sh
